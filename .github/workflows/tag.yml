name: Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release"
        required: true

      snapshot:
        description: "Next snapshot version"
        required: true

      changes:
        description: "What have changed in this version?"
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Update to release version'
        id: version
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "Updating POM to version $VERSION"
          ./mvnw -B versions:set versions:commit -DnewVersion=$VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Releasing version $VERSION"
          git push origin HEAD:main

      - name: 'Release to GitHub'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGES_IN_VERSION: ${{ github.event.inputs.changes }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            Changes in this Release
            - CHANGES_IN_VERSION
          draft: false
          prerelease: false

      - name: 'Setup next Snapshot'
        id: version
        run: |
          SNAPSHOT=${{ github.event.inputs.snapshot }}-SNAPSHOT
          echo "Updating POM to version $SNAPSHOT"
          ./mvnw -B versions:set versions:commit -DnewVersion=$SNAPSHOT
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "Setting next snapshot $SNAPSHOT"
          git push origin HEAD:main